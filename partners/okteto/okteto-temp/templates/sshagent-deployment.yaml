{{- if .Values.installer.sshSecretName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "okteto.sshAgent" . }}"
  labels:
    app.kubernetes.io/component: "ssh-agent"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "{{ include "okteto.sshAgent" . }}"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    secret.reloader.stakater.com/reload: "{{ include "okteto.tlsSecretsToReload" . }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: {{ .Values.sshAgent.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.sshAgent" . }}"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.sshAgent" . }}"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "ssh-agent"
        app.kubernetes.io/part-of: "okteto"
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.sshAgent.labels }}
{{ toYaml .Values.sshAgent.labels | indent 8 }}
{{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
{{- if .Values.sshAgent.annotations }}
{{ toYaml .Values.sshAgent.annotations | indent 8 }}
{{- end }}
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
{{ include "okteto.oktetoAffinity" . | indent 10 }}
        podAntiAffinity:
          {{- if .Values.affinity.required }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - "{{ include "okteto.sshAgent" . }}"
              topologyKey: kubernetes.io/hostname
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "{{ include "okteto.sshAgent" . }}"
                topologyKey: kubernetes.io/hostname
          {{- end }}
      serviceAccountName: {{ include "okteto.fullname" . }}
      {{- include "okteto.tolerations" (dict "globalsTolerations" .Values.globals.tolerations.okteto "poolTolerations" .Values.tolerations.oktetoPool ) | nindent 6 }}
      {{- include "okteto.nodeSelectors" (dict "poolTolerations" .Values.tolerations.oktetoPool "nodeSelectors" .Values.globals.nodeSelectors.okteto ) | nindent 6 }}
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: {{ include "okteto.ingress.tlsSecret" . }}
        {{- if eq "true" (include "okteto.privateca.enabled" .) }}
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: {{ include "okteto.privateca.secretname" . }}
        {{- end }}
      priorityClassName: {{ .Values.sshAgent.priorityClassName | default .Values.globals.priorityClassName }}
      securityContext:
        runAsNonRoot: true
      containers:
        - name: ssh-agent
          image: {{ include "okteto.image.backend" . }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: ssh-agent
              containerPort: {{ .Values.sshAgent.port }}
              protocol: TCP
          args: [ "ssh-agent" ]
          env:
            - name: PORT
              value: "{{ .Values.sshAgent.port }}"
{{- if .Values.sshAgent.extraEnv }}
{{ toYaml .Values.sshAgent.extraEnv | indent 12 }}
{{- end }}
          envFrom:
            - configMapRef:
                name: "{{ include "okteto.fullname" . }}"
            - secretRef:
                name: {{ include "okteto.fullname" . }}
            - secretRef:
                name: "{{ .Values.cloud.secret.name }}"
                optional: true
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          {{- if eq "true" (include "okteto.privateca.enabled" .) }}
            - name: ca-pemstore
              mountPath: /etc/ssl/certs/okteto-private-ca.crt
              subPath: {{ include "okteto.privateca.secretkey" . }}
              readOnly: true
          {{- end }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.sshAgent.resources | indent 12 }}
{{- end}}