apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "okteto.fullname" . }}-regcreds"
  labels:
    app.kubernetes.io/component: "regcreds"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-regcreds"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    secret.reloader.stakater.com/reload: "{{ include "okteto.fullname" . }}-regcreds,{{ .Values.cloud.secret.name }}"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
  replicas: {{ .Values.regcredsManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-regcreds"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-regcreds"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "regcreds"
        app.kubernetes.io/part-of: "okteto"
        {{- if .Values.podLabels }}
        {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
        {{- if .Values.regcredsManager.podLabels }}
        {{ toYaml .Values.regcredsManager.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.regcredsManager.podAnnotations }}
        {{ toYaml .Values.regcredsManager.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 300
      affinity:
        nodeAffinity:
{{ include "okteto.oktetoAffinity" . | indent 10 }}
        podAntiAffinity:
          {{- if .Values.affinity.required }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - "{{ include "okteto.fullname" . }}-regcreds"
              topologyKey: kubernetes.io/hostname
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - "{{ include "okteto.fullname" . }}-regcreds"
                topologyKey: kubernetes.io/hostname
          {{- end }}
      serviceAccountName: {{ include "okteto.fullname" . }}
      {{- include "okteto.tolerations" (dict "globalsTolerations" .Values.globals.tolerations.okteto "poolTolerations" .Values.tolerations.oktetoPool ) | nindent 6 }}
      {{- include "okteto.nodeSelectors" (dict "poolTolerations" .Values.tolerations.oktetoPool "nodeSelectors" .Values.globals.nodeSelectors.okteto ) | nindent 6 }}
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: {{ include "okteto.fullname" . }}-regcreds
      priorityClassName: {{ .Values.regcredsManager.priorityClassName | default .Values.globals.priorityClassName }}
      securityContext:
        runAsNonRoot: true
      containers:
        - name: controller
          image: {{ include "okteto.image.backend" . }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          args: [ "regcreds" ]
          volumeMounts:
            - name: tls-certs
              mountPath: /run/secrets/tls
              readOnly: true
          env:
            - name: DEBUG
              value: "{{ .Values.regcredsManager.debug }}"
            - name: PORT
              value: "8081"
          envFrom:
          - configMapRef:
              name: "{{ include "okteto.fullname" . }}"
          - secretRef:
              name: {{ include "okteto.fullname" . }}
          - secretRef:
              name: "{{ .Values.cloud.secret.name }}"
              optional: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
            failureThreshold: 3
            timeoutSeconds: 10
          resources:
            {{ toYaml .Values.regcredsManager.resources | nindent 12 }}